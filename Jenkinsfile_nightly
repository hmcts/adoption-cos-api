#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 8 * * 1-5')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://adoption-cos-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "adoption"
def component = "spring-boot-template"

withNightlyPipeline(type, product, component) {
  env.TEST_URL = "http://adoption-cos-api-aat.service.core-compute-aat.internal"
  enableSlackNotifications('#adoption-tech')
  enableFullFunctionalTest(90)
  enableFortifyScan()
  afterAlways('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }

  afterAlways('fullFunctionalTest') {
    stage('Playwright Tests Nightly') {
      try {
        yarnBuilder.yarn('test:functional-nightly')
      } catch (Error) {
        unstable(message: "${STAGE_NAME} is unstable: " + Error.toString())
      } finally {
        publishHTML([
          allowMissing: true,
          alwaysLinkToLastBuild: true,
          keepAll: true,
          reportDir: 'playwright-report',
          reportFiles: 'index.html',
          reportName: 'Playwright UI Functional Test Report'
        ])
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/functionalTest/**/*'
      }
    }
    stage('Playwright Accessibility Tests Nightly') {
      try {
        yarnBuilder.yarn('test:accessibility-nightly')
      } catch (Error) {
        unstable(message: "${STAGE_NAME} is unstable: " + Error.toString())
      } finally {
        publishHTML([
          allowMissing: true,
          alwaysLinkToLastBuild: true,
          keepAll: true,
          reportDir: "playwright-report",
          reportFiles: 'index.html',
          reportName: 'Playwright Accessibility Functional Test Report'
        ])
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/functionalTest/**/*'
      }
    }
  }
}
