tags:
  ccd-idam-pr: true

java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  environment:
    CASE_DATA_STORE_BASEURL: http://ccd-data-store-api-adoption-cos-api-pr-${CHANGE_ID}.service.core-compute-preview.internal
    CITIZEN_UPDATE_CASE_STATE_ENABLED: true
    APP_INSIGHTS_KEY: 273cc8cd-c511-49ae-9988-9debe01d54d5

  keyVaults:
    adoption:
      secrets:
        - name: uk-gov-notify-api-key
          alias: UK_GOV_NOTIFY_API_KEY
        - name: s2s-secret-cos-api
          alias: S2S_SECRET
        - name: idam-secret
          alias: IDAM_CLIENT_SECRET
        - name: idam-system-user-name
          alias: IDAM_SYSTEM_UPDATE_USERNAME
        - name: idam-system-user-password
          alias: IDAM_SYSTEM_UPDATE_PASSWORD
        - name: launchDarkly-sdk-key
          alias: LAUNCH_DARKLY_SDK_KEY

idam-pr:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-ccd-idam-pr
  redirect_uris:
    CCD Admin:
      - https://admin-web-${SERVICE_FQDN}/oauth2redirect
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
      - http://xui-${SERVICE_FQDN}/oauth2/callback

ccd:
  ccd:
    definitionImporter:
      enabled: false
    apiGatewayWeb:
      enabled: true
    s2s:
      enabled: false

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  global:
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    postgresUsername: hmcts
    postgresPassword: hmcts
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

  ccd-api-gateway-web:
    nodejs:
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}
      keyVaults: []
  ccd-data-store-api:
    java:
      imagePullPolicy: Always
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_DEFAULT_LOG_LEVEL: info
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_admin,ccd_ps,adoption_cos_api,adoption_web,xui_webapp
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: adoption_cos_api
        CCD_DM_DOMAIN: http://dm-store-aat.service.core-compute-aat.internal
        CCD_DOCUMENT_URL_PATTERN: ^https?://(((?:api-gateway\.preprod\.dm\.reform\.hmcts\.net|dm-store-aat\.service\.core-compute-aat\.internal(?::\d+)?)\/documents\/[A-Za-z0-9-]+(?:\/binary)?)|(em-hrs-api-aat\.service\.core-compute-aat\.internal(?::\d+)?\/hearing-recordings\/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\/segments\/[0-9]))
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        ELASTIC_SEARCH_ENABLED: "true"
        ELASTIC_SEARCH_HOSTS: ccd-elasticsearch:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: "http://ccd-elasticsearch:9200"
      keyVaults: []
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  ccd-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    container_name: ccd-elasticsearch
    depends_on:
      - "ccd-data-store-api"
    environment:
      - cluster.name=ccd-docker-es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - action.auto_create_index=.security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*,grantofrepresentation_cases,caveat_cases,legacy_cases,standingsearch_cases,willlodgement_cases
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - compose_default

  ccd-logstash:
    image: "ccd-logstash:latest"
    container_name: ccd-logstash
#    build:
#      context: logstash
#
#    image: "ccd-logstash:adoption"
#    container_name: ccd-logstash
    depends_on:
      - "ccd-elasticsearch"
    environment:
      - XPACK_MONITORING_ENABLED=false
      - DB_URL=jdbc:postgresql://ccd-shared-database:5432/ccd_data?stringtype=unspecified&ssl=false
      - DB_USER=ccd
      - DB_PWD=ccd
      - ES_DATA_NODES_URL=http://ccd-elasticsearch:9200
#      - APPINSIGHTS_INSTRUMENTATIONKEY=dummy
    networks:
      - compose_default

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.0
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - ccd-elasticsearch

  am-role-assignment-service:
    java:
      keyVaults:
        am:
          secrets:
            - role-assignment-service-LD-SDK-KEY
  ccd-definition-store-api:
    java:
      imagePullPolicy: Always
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
#        ELASTIC_SEARCH_ENABLED: "true"
#        ELASTIC_SEARCH_HOSTS: ccd-elasticsearch:9200
      keyVaults: []
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
  ccd-user-profile-api:
    java:
      imagePullPolicy: Always
      enviroment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
      keyVaults: []
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      keyVaults: []
      environment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}

  importer:
    userprofile:
      enabled: true
      jurisdictions:
        - ADOPTION
      users:
        - adoption_caseworker_solicitor@mailinator.com|ADOPTION|A58|Draft
        - AdoptionCaseWorkerUser@AAT.com|ADOPTION|A58|Draft
        - TEST_CASE_WORKER_USER@mailinator.com|ADOPTION|A58|Draft
        - TEST_SOLICITOR@mailinator.com|ADOPTION|A58|Draft
        - adoption_as_caseworker_admin@mailinator.com|ADOPTION|A58|Draft
        - civil_unspecified@mailinator.com|ADOPTION|A58|Draft
      userProfileDatabaseHost: ${SERVICE_NAME}-ccd-postgres
      userProfileDatabasePort: 5432
      userProfileDatabaseUser: hmcts
      userProfileDatabasePassword: hmcts
      userProfileDatabaseName: user-profile

  postgresql:
    persistence:
      enabled: false

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    environment:
      HEALTH_CCD_COMPONENT_API: http://gateway-${SERVICE_FQDN}/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: http://xui-terms-and-conditions-${SERVICE_FQDN}.service.core-compute-preview.internal/health
      SERVICES_CCD_COMPONENT_API: http://gateway-${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_DOCUMENTS_API_V2: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://aac-${SERVICE_FQDN}
      SERVICES_TERMS_AND_CONDITIONS: http://xui-terms-and-conditions-${SERVICE_FQDN}.service.core-compute-preview.internal
      JURISDICTIONS: ADOPTION
